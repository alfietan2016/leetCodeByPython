# 整数反转
#
# 给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。
#
# 示例 1:
# 输入: 123
# 输出: 321
#
# 示例 2:
# 输入: -123
# 输出: -321
#
# 示例 3:
# 输入: 120
# 输出: 21
#
# 注意:
# 假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−2^31,  2^31 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。

"""
将参数的绝对值转为字符串，将字符串反转，判断参数是否为正数，正数返回原来的数，负数返回*-1
判断转化后的数是在范围 [−2^31,  2^31 − 1]中，是返回原来的数，否则则返回0
时间复杂度为O(n),空间复杂度为O(1)
"""
def reverse(x):
    s = str(abs(x))
    res = int(s[::-1]) if x >= 0 else int(s[::-1]) * -1
    res = res if - 2147483648 < res <= 2147483647 else 0
    return res


if __name__ == '__main__':
    x1 = 123
    x2 = -123
    x3 = 120
    print(reverse(x1) == 321)
    print(reverse(x2) == -321)
    print(reverse(x3) == 21)